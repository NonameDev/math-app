import java.util.regex.Pattern

apply plugin: 'com.android.application'
apply plugin: 'com.github.triplet.play'

def currentManifestFile = file('./src/main/AndroidManifest.xml')

android {
    compileSdkVersion 31

    defaultConfig {
        applicationId 'burrows.apps.mathapp'
        minSdkVersion 21
        targetSdkVersion 31
        versionCode 1
        versionName '1.0'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    signingConfigs {
        debug {
            storeFile rootProject.file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }

        if (System.getenv("TRAVIS")) {
            release {
                storeFile rootProject.file('release.keystore')
                storePassword System.getenv("KEYSTORE_PASS")
                keyAlias System.getenv("ALIAS_NAME")
                keyPassword System.getenv("ALIAS_PASS")
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }

    testOptions {
      unitTests {
        returnDefaultValues = true
        includeAndroidResources = true
      }
    }
}

if (System.getenv("TRAVIS")) {
    play {
        serviceAccountEmail = System.getenv("SERVICE_EMAIL")
        pk12File = rootProject.file('play.p12')
        track = 'production' // or 'alpha' or 'beta' or 'production'
    }

    task incrementVersion << {
        // Increment versioncode by 1
        def matcher = Pattern.compile('versionCode=\"(\\d+)\"').
                matcher(currentManifestFile.getText())
        matcher.find()
        def manifestContent = matcher.
                replaceAll('versionCode=\"' + ++Integer.parseInt(matcher.group(1)) + '\"')
        currentManifestFile.write(manifestContent)
    }
    incrementVersion.dependsOn 'testDebug'

    // Run testFreeDebug(fast build + fast test) -> increment version -> publish free and paid
    // release
    task publish(dependsOn: ['publishApkRelease']) {
        group = 'BurrowsApps Publishing'
        description = 'Publish to Google Play'
    }
    publish.dependsOn incrementVersion
}

dependencies {
    implementation project(':json')
    implementation 'com.android.support:appcompat-v7:22.2.0'
    implementation 'com.android.support:cardview-v7:22.2.0'
    implementation 'com.android.support:recyclerview-v7:22.2.0'
    implementation 'com.android.support:design:22.2.0'

    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.hamcrest:hamcrest-integration:1.3'
    testImplementation 'org.easymock:easymock:4.3'
    testImplementation 'org.powermock:powermock-core:2.0.9'
    testImplementation 'org.powermock:powermock-module-junit4:2.0.9'
    testImplementation 'org.powermock:powermock-api-easymock:2.0.9'
    testImplementation 'org.robolectric:robolectric:4.7.3'
    testImplementation 'org.robolectric:annotations:4.7.3'
    testImplementation 'androidx.test:annotation:1.0.0'
    testImplementation 'androidx.test:core:1.4.0'
    testImplementation 'androidx.test.ext:junit:1.1.3'
    testImplementation 'androidx.test:rules:1.4.0'
    testImplementation 'androidx.test:runner:1.4.0'
}

